#!/usr/bin/env python3

import gpio_control as control
import sht3x_sensor as sht3x
import pm_sensor as pm

import argparse
import sys


#--------------------------------------------------------------------
# ------------------ arguments
parser = argparse.ArgumentParser()
# --- usb switch
usb_arghelp = 'usb on/off, valid value: "on" or "off"'
parser.add_argument('-u', '--usb', type=str, help=usb_arghelp)
# --- power switch
power_arghelp = 'power toggle or long press, valid value: "toggle", "longpress"'
parser.add_argument('-p', '--power', type=str, help=power_arghelp)
# --- PM sensor set wake/sleep
pm_sensor_set_arghelp = 'PM sensor wake/sleep/read, valid value: "wakeup", "sleep", "reset", "read"'
parser.add_argument('-pm', '--pmsensor', type=str, help=pm_sensor_set_arghelp)
# --- power status
powerstatus_arghelp = 'read power status, power status is either "on" or "off"'
parser.add_argument('-ps', '--powerstatus', help=powerstatus_arghelp)
# --- temperature and humidity
temp_humid_arghelp = 'obtain temperature and humidity value from SHT3x sensor'
parser.add_argument('-th', '--temphumid', help=temp_humid_arghelp)
# --- parse args
args = parser.parse_args()


#--------------------------------------------------------------------
# ------------------ app logic
if len(sys.argv) == 1:
  parser.print_help()
else:
  if args.usb:
    if args.usb == 'on':
      control.set_usb_enabled(True)
    elif args.usb == 'off':
      control.set_usb_enabled(False)
    else:
      print(usb_arghelp)
  if args.power:
    if args.power == 'toggle':
      control.power_toggle()
    elif args.power == 'longpress':
      control.power_longpress()
    else:
      print(power_arghelp)
  if args.pmsensor:
    if args.pmsensor == 'wakeup':
      control.pm_sensor_set_wakeup(True)
    elif args.pmsensor == 'sleep':
      control.pm_sensor_set_wakeup(False)
    elif args.pmsensor == 'reset':
      control.pm_sensor_reset()
    elif args.pmsensor == 'read':
      pms = pm.PMSensor.instance()
      data = pms.read()
      print(data)
    else:
      print(pm_sensor_set_arghelp)
  if args.powerstatus:
    _, s = control.read_power_status()
    print(s)
  if args.temphumid:
    _, _, _, result_str = sht3x.read_upstream()
    print(result_str)
